{
  "swagger" : "2.0",
  "info" : {
    "title" : "MPASS.id SSO proxy metadata API",
    "description" : "This is work in progress version of Metadata API for Education sector SSO http://mpass.id. Provide metadata information about proxy operations and information such as statistics, connected services and municipalities.\nAPI is CORS enabled. JSON swagger file https://github.com/Digipalvelutehdas/MPASSid-proxy/tree/master/API/spec/\n\n------------------------------",
    "version" : "MVP",
    "contact" : {
      "name" : "Jarkko Moilanen, API product owner",
      "url" : "http://mpass.id/api",
      "email" : "jarkko.moilanen@minedu.fi"
    },
    "license" : {
      "name" : "MIT",
      "url" : "https://github.com/Digipalvelutehdas/MPASS-proxy/blob/master/API/license.md"
    }
  },
  "host" : "api.mpass.fi",
  "schemes" : [ "https" ],
  "basePath" : "/proxy",
  "produces" : [ "application/json" ],
  "paths" : {
    "/meta" : {
      "get" : {
        "summary" : "Returns meta information about proxy",
        "description" : "Returns metadata set of information about this particular MPASS.id proxy. \n",
        "produces" : [ "application/json" ],
        "tags" : [ "Meta" ],
        "responses" : {
          "200" : {
            "description" : "Meta information package",
            "schema" : {
              "$ref" : "#/definitions/meta"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      }
    },
    "/municipalities" : {
      "get" : {
        "summary" : "Returns list of connected municipalities",
        "description" : "Get list of proxy connected municipalities. \n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "lang",
          "in" : "query",
          "description" : "Content language. Default is English. Each language is a two-letter (ISO 639-1) lowercase abbreviation",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "use offset to set starting point in pagination",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "set number of services to return in list.",
          "type" : "number"
        } ],
        "tags" : [ "Municipalities" ],
        "responses" : {
          "200" : {
            "description" : "List of municipalities",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/municipality"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/serviceproviders" : {
      "get" : {
        "summary" : "Returns list of connected businesses",
        "description" : "Get list of proxy connected service providers. \n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "lang",
          "in" : "query",
          "description" : "Content language. Default is English. Each language is a two-letter (ISO 639-1) lowercase abbreviation",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "use offset to set starting point in pagination",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "set number of services to return in list.",
          "type" : "number"
        } ],
        "tags" : [ "Service providers" ],
        "responses" : {
          "200" : {
            "description" : "List of service providers",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/service"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "summary" : "Add or update connected service provider information",
        "operationId" : "addProviderInformation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "tags" : [ "Services" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Service metadata object that needs to be added/updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/service"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Added/modified meta information package",
            "schema" : {
              "type" : "object",
              "items" : {
                "$ref" : "#/definitions/service"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "mpass_api_auth" : [ "write_meta", "read_meta" ]
        } ]
      }
    },
    "/authenticationsources" : {
      "get" : {
        "summary" : "Returns list of available authentication sources",
        "description" : "TODO \n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "comma separated list",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        } ],
        "tags" : [ "Service providers" ],
        "responses" : {
          "200" : {
            "description" : "List of available authentication sources",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/authsource"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/services" : {
      "get" : {
        "summary" : "Returns lists of connected services",
        "description" : "Get list of proxy connected services. \n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "lang",
          "in" : "query",
          "description" : "Content language. Default is English. Each language is a two-letter (ISO 639-1) lowercase abbreviation",
          "required" : false,
          "type" : "string",
          "pattern" : "^[a-z]{2}"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "use offset to set starting point in pagination",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "set number of services to return in list.",
          "type" : "number"
        } ],
        "tags" : [ "Services" ],
        "responses" : {
          "200" : {
            "description" : "List of services",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/service"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "summary" : "Add or update proxy metadata",
        "operationId" : "addMeta",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "tags" : [ "Services" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Meta object that needs to be added/updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/service"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Added/modified meta information package",
            "schema" : {
              "type" : "object",
              "items" : {
                "$ref" : "#/definitions/meta"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "mpass_api_auth" : [ "write_meta", "read_meta" ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "api_key" : {
      "type" : "apiKey",
      "name" : "api_key",
      "in" : "header"
    },
    "mpass_api_auth" : {
      "type" : "oauth2",
      "authorizationUrl" : "http://auth.digipalvelutehdas.fi/oauth/dialog",
      "flow" : "implicit",
      "scopes" : {
        "write_meta" : "modify meta information",
        "read_meta" : "read meta information"
      }
    }
  },
  "definitions" : {
    "municipality" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Municipality code from Opintopolku Organization registry"
        },
        "name" : {
          "type" : "string",
          "description" : "Municipality name"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "design", "test", "production", "retired" ],
          "description" : "Integration status."
        }
      }
    },
    "service" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "identifying code in proxy"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "design", "test", "production", "retired" ],
          "description" : "Service status."
        },
        "provider_id" : {
          "type" : "string",
          "description" : "service provider's id code"
        },
        "name" : {
          "type" : "string",
          "description" : "Service name"
        },
        "service_description" : {
          "type" : "string",
          "description" : "Description of the service. Note, param defined language by code."
        },
        "contact_email" : {
          "type" : "string",
          "description" : "contact email for the service"
        }
      }
    },
    "authsource" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Authentication method metadata."
        },
        "status" : {
          "type" : "string",
          "enum" : [ "design", "test", "production", "retired" ],
          "description" : "Authentication method status. Check status before taking into use."
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "description_url" : {
          "type" : "string"
        },
        "saml_authentication_class_ref" : {
          "type" : "string"
        }
      }
    },
    "meta" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "identifying code for proxy"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "design", "test", "production", "retired" ],
          "description" : "Proxy status."
        },
        "saml_entity_id" : {
          "type" : "string",
          "description" : "SAML2 IdP entity ID"
        },
        "saml_metadata_url" : {
          "type" : "string",
          "description" : "SAML2 IdP metadata location (URL)"
        },
        "name" : {
          "type" : "string",
          "description" : "Proxy name"
        },
        "organisation" : {
          "type" : "string",
          "description" : "Name of the organisation maintaining proxy"
        },
        "country_code" : {
          "type" : "string",
          "description" : "country code...ISO something ...."
        },
        "service_description" : {
          "type" : "string",
          "description" : "Description of the service. Note, param defined language by code."
        },
        "contact_email" : {
          "type" : "string",
          "description" : "contact email for the service"
        }
      }
    },
    "Error" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        },
        "fields" : {
          "type" : "string"
        }
      }
    }
  }
}